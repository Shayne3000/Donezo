[versions]
agp = "8.13.0"
androidx-activityCompose = "1.10.1"
coil = "3.2.0"
compose-multiplatform = "1.8.1" # Also compose version
koin = "4.1.0"
kotlin = "2.1.21"
ksp = "2.1.21-2.0.1"
ktor = "3.1.3"
kotlin-coroutines = "1.10.2"
kotlin-datetime = "0.7.1"
kotlin-serialization-json = "1.8.1"
lifecycle = "2.9.5"
navigation-compose = "2.9.0-beta02"
placeholder = "1.0.1"
room = "2.7.1"
scalable-pixel = "1.0.7"
shimmer = "1.3.3"
sqlite = "2.5.1"

[libraries]
# Activity compose
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }

# Coil
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }

# Koin
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core" }
koin-android = { module = "io.insert-koin:koin-android" }
koin-compose = { module = "io.insert-koin:koin-compose" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel" }
koin-compose-viewmodel-navigation = { module = "io.insert-koin:koin-compose-viewmodel-navigation" }

# Multiplatform Scalable pixels
multiplatform-scalable-pixels = { module = "network.chaintech:sdp-ssp-compose-multiplatform", version.ref = "scalable-pixel" }

# Kotlin Datetime
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlin-datetime" }

# Kotlin Serialization JSON converter/serializer
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization-json" }

# Kotlin Coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlin-coroutines" }

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor"}
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-content-negotiaton = { module = "io.ktor:ktor-client-content-negotiation", version.ref = 'ktor' }
## The Ktor artifact for registering kotlinx.serialization as KtorClient's JSON serializer.
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor"}

# Lifecycle utilities for compose
lifecycle-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }

# Navigation Compose
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigation-compose" }

# RevenueCat placeholder
revenuecat-placeholder = { module = "com.revenuecat.purchases:placeholder", version.ref = "placeholder" }

# Room
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
# Bundled SQLite Library
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite"}

# Shimmer
shimmer = { module = "com.valentinilk.shimmer:compose-shimmer", version.ref = "shimmer"}

### Test dependencies ###
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin"}
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
room = { id = "androidx.room", version.ref = "room" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
